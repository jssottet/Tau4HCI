/*
* generated by Xtext
*/
grammar InternalTauHCI;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package tudor.lu.modeling.transformation.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tudor.lu.modeling.transformation.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import tudor.lu.modeling.transformation.services.TauHCIGrammarAccess;

}

@parser::members {
 
 	private TauHCIGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TauHCIGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecific
entryRuleSpecific 
:
{ before(grammarAccess.getSpecificRule()); }
	 ruleSpecific
{ after(grammarAccess.getSpecificRule()); } 
	 EOF 
;

// Rule Specific
ruleSpecific
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificAccess().getGroup()); }
(rule__Specific__Group__0)
{ after(grammarAccess.getSpecificAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomain
entryRuleDomain 
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAccess().getGroup()); }
(rule__Domain__Group__0)
{ after(grammarAccess.getDomainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValid
entryRuleValid 
:
{ before(grammarAccess.getValidRule()); }
	 ruleValid
{ after(grammarAccess.getValidRule()); } 
	 EOF 
;

// Rule Valid
ruleValid
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidAccess().getAlternatives()); }
(rule__Valid__Alternatives)
{ after(grammarAccess.getValidAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAUIType
entryRuleAUIType 
:
{ before(grammarAccess.getAUITypeRule()); }
	 ruleAUIType
{ after(grammarAccess.getAUITypeRule()); } 
	 EOF 
;

// Rule AUIType
ruleAUIType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAUITypeAccess().getAlternatives()); }
(rule__AUIType__Alternatives)
{ after(grammarAccess.getAUITypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUIElement
entryRuleUIElement 
:
{ before(grammarAccess.getUIElementRule()); }
	 ruleUIElement
{ after(grammarAccess.getUIElementRule()); } 
	 EOF 
;

// Rule UIElement
ruleUIElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUIElementAccess().getAlternatives()); }
(rule__UIElement__Alternatives)
{ after(grammarAccess.getUIElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeType
entryRuleAttributeType 
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
(rule__AttributeType__Alternatives)
{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getAlternatives()); }
(rule__Label__Alternatives)
{ after(grammarAccess.getLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWindow
entryRuleWindow 
:
{ before(grammarAccess.getWindowRule()); }
	 ruleWindow
{ after(grammarAccess.getWindowRule()); } 
	 EOF 
;

// Rule Window
ruleWindow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWindowAccess().getGroup()); }
(rule__Window__Group__0)
{ after(grammarAccess.getWindowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePanel
entryRulePanel 
:
{ before(grammarAccess.getPanelRule()); }
	 rulePanel
{ after(grammarAccess.getPanelRule()); } 
	 EOF 
;

// Rule Panel
rulePanel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPanelAccess().getGroup()); }
(rule__Panel__Group__0)
{ after(grammarAccess.getPanelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListElementSelector
entryRuleListElementSelector 
:
{ before(grammarAccess.getListElementSelectorRule()); }
	 ruleListElementSelector
{ after(grammarAccess.getListElementSelectorRule()); } 
	 EOF 
;

// Rule ListElementSelector
ruleListElementSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListElementSelectorAccess().getGroup()); }
(rule__ListElementSelector__Group__0)
{ after(grammarAccess.getListElementSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcept
entryRuleConcept 
:
{ before(grammarAccess.getConceptRule()); }
	 ruleConcept
{ after(grammarAccess.getConceptRule()); } 
	 EOF 
;

// Rule Concept
ruleConcept
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConceptAccess().getAlternatives()); }
(rule__Concept__Alternatives)
{ after(grammarAccess.getConceptAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectedConcept
entryRuleSelectedConcept 
:
{ before(grammarAccess.getSelectedConceptRule()); }
	 ruleSelectedConcept
{ after(grammarAccess.getSelectedConceptRule()); } 
	 EOF 
;

// Rule SelectedConcept
ruleSelectedConcept
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectedConceptAccess().getGroup()); }
(rule__SelectedConcept__Group__0)
{ after(grammarAccess.getSelectedConceptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleButton
entryRuleButton 
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getButtonAccess().getGroup()); }
(rule__Button__Group__0)
{ after(grammarAccess.getButtonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataField
entryRuleDataField 
:
{ before(grammarAccess.getDataFieldRule()); }
	 ruleDataField
{ after(grammarAccess.getDataFieldRule()); } 
	 EOF 
;

// Rule DataField
ruleDataField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataFieldAccess().getGroup()); }
(rule__DataField__Group__0)
{ after(grammarAccess.getDataFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImageField
entryRuleImageField 
:
{ before(grammarAccess.getImageFieldRule()); }
	 ruleImageField
{ after(grammarAccess.getImageFieldRule()); } 
	 EOF 
;

// Rule ImageField
ruleImageField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImageFieldAccess().getGroup()); }
(rule__ImageField__Group__0)
{ after(grammarAccess.getImageFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextField
entryRuleTextField 
:
{ before(grammarAccess.getTextFieldRule()); }
	 ruleTextField
{ after(grammarAccess.getTextFieldRule()); } 
	 EOF 
;

// Rule TextField
ruleTextField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextFieldAccess().getGroup()); }
(rule__TextField__Group__0)
{ after(grammarAccess.getTextFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextArea
entryRuleTextArea 
:
{ before(grammarAccess.getTextAreaRule()); }
	 ruleTextArea
{ after(grammarAccess.getTextAreaRule()); } 
	 EOF 
;

// Rule TextArea
ruleTextArea
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextAreaAccess().getGroup()); }
(rule__TextArea__Group__0)
{ after(grammarAccess.getTextAreaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Rule__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_2_0()); }
(rule__Rule__Group_2_0__0)
{ after(grammarAccess.getRuleAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getRuleAccess().getInteractivelyValidAssignment_2_1()); }
(rule__Rule__InteractivelyValidAssignment_2_1)
{ after(grammarAccess.getRuleAccess().getInteractivelyValidAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Valid__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidAccess().getInteractiveKeyword_0()); }

	'interactive' 

{ after(grammarAccess.getValidAccess().getInteractiveKeyword_0()); }
)

    |(
{ before(grammarAccess.getValidAccess().getNotinteractiveKeyword_1()); }

	'notinteractive' 

{ after(grammarAccess.getValidAccess().getNotinteractiveKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSelection_1_nKeyword_0()); }

	'selection_1_n' 

{ after(grammarAccess.getTypeAccess().getSelection_1_nKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSelection_n_nKeyword_1()); }

	'selection_n_n' 

{ after(grammarAccess.getTypeAccess().getSelection_n_nKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getContainerKeyword_2()); }

	'container' 

{ after(grammarAccess.getTypeAccess().getContainerKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getInputKeyword_3()); }

	'input' 

{ after(grammarAccess.getTypeAccess().getInputKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getOutputKeyword_4()); }

	'output' 

{ after(grammarAccess.getTypeAccess().getOutputKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getCommandKeyword_5()); }

	'command' 

{ after(grammarAccess.getTypeAccess().getCommandKeyword_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNavigationKeyword_6()); }

	'navigation' 

{ after(grammarAccess.getTypeAccess().getNavigationKeyword_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getRootKeyword_7()); }

	'Root' 

{ after(grammarAccess.getTypeAccess().getRootKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AUIType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAUITypeAccess().getAbstractKeyword_0()); }

	'abstract' 

{ after(grammarAccess.getAUITypeAccess().getAbstractKeyword_0()); }
)

    |(
{ before(grammarAccess.getAUITypeAccess().getInteractiveKeyword_1()); }

	'interactive' 

{ after(grammarAccess.getAUITypeAccess().getInteractiveKeyword_1()); }
)

    |(
{ before(grammarAccess.getAUITypeAccess().getUserKeyword_2()); }

	'user' 

{ after(grammarAccess.getAUITypeAccess().getUserKeyword_2()); }
)

    |(
{ before(grammarAccess.getAUITypeAccess().getSystemKeyword_3()); }

	'system' 

{ after(grammarAccess.getAUITypeAccess().getSystemKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UIElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUIElementAccess().getWindowParserRuleCall_0()); }
	ruleWindow
{ after(grammarAccess.getUIElementAccess().getWindowParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getListElementSelectorParserRuleCall_1()); }
	ruleListElementSelector
{ after(grammarAccess.getUIElementAccess().getListElementSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getButtonParserRuleCall_2()); }
	ruleButton
{ after(grammarAccess.getUIElementAccess().getButtonParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getPanelParserRuleCall_3()); }
	rulePanel
{ after(grammarAccess.getUIElementAccess().getPanelParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getDataFieldParserRuleCall_4()); }
	ruleDataField
{ after(grammarAccess.getUIElementAccess().getDataFieldParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getImageFieldParserRuleCall_5()); }
	ruleImageField
{ after(grammarAccess.getUIElementAccess().getImageFieldParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getTextFieldParserRuleCall_6()); }
	ruleTextField
{ after(grammarAccess.getUIElementAccess().getTextFieldParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getUIElementAccess().getTextAreaParserRuleCall_7()); }
	ruleTextArea
{ after(grammarAccess.getUIElementAccess().getTextAreaParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getStringKeyword_0()); }

	'string' 

{ after(grammarAccess.getAttributeTypeAccess().getStringKeyword_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTextKeyword_1()); }

	'text' 

{ after(grammarAccess.getAttributeTypeAccess().getTextKeyword_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDocumentKeyword_2()); }

	'document' 

{ after(grammarAccess.getAttributeTypeAccess().getDocumentKeyword_2()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDateKeyword_3()); }

	'date' 

{ after(grammarAccess.getAttributeTypeAccess().getDateKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getLabelAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLabelAccess().getTaskNameKeyword_1()); }

	'taskName' 

{ after(grammarAccess.getLabelAccess().getTaskNameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConceptAccess().getAllConceptsKeyword_0()); }

	'All Concepts' 

{ after(grammarAccess.getConceptAccess().getAllConceptsKeyword_0()); }
)

    |(
{ before(grammarAccess.getConceptAccess().getNoConceptsKeyword_1()); }

	'No Concepts' 

{ after(grammarAccess.getConceptAccess().getNoConceptsKeyword_1()); }
)

    |(
{ before(grammarAccess.getConceptAccess().getSelectionAssignment_2()); }
(rule__Concept__SelectionAssignment_2)*
{ after(grammarAccess.getConceptAccess().getSelectionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRulesAssignment_0()); }
(rule__Model__RulesAssignment_0)*
{ after(grammarAccess.getModelAccess().getRulesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSpecificRulesAssignment_1()); }
(rule__Model__SpecificRulesAssignment_1)*
{ after(grammarAccess.getModelAccess().getSpecificRulesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDomainRulesAssignment_2()); }
(rule__Model__DomainRulesAssignment_2)*
{ after(grammarAccess.getModelAccess().getDomainRulesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTaskRuleFromKeyword_0()); }

	'task rule from' 

{ after(grammarAccess.getRuleAccess().getTaskRuleFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAuitypeAssignment_1()); }
(rule__Rule__AuitypeAssignment_1)
{ after(grammarAccess.getRuleAccess().getAuitypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAlternatives_2()); }
(rule__Rule__Alternatives_2)?
{ after(grammarAccess.getRuleAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getRuleAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getUielementAssignment_4()); }
(rule__Rule__UielementAssignment_4)
{ after(grammarAccess.getRuleAccess().getUielementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Rule__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_2_0__0__Impl
	rule__Rule__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAndKeyword_2_0_0()); }

	'and' 

{ after(grammarAccess.getRuleAccess().getAndKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTaskTypeAssignment_2_0_1()); }
(rule__Rule__TaskTypeAssignment_2_0_1)
{ after(grammarAccess.getRuleAccess().getTaskTypeAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Specific__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__0__Impl
	rule__Specific__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getSpecificRuleFromKeyword_0()); }

	'specific rule from' 

{ after(grammarAccess.getSpecificAccess().getSpecificRuleFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specific__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__1__Impl
	rule__Specific__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getTaskNameAssignment_1()); }
(rule__Specific__TaskNameAssignment_1)
{ after(grammarAccess.getSpecificAccess().getTaskNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specific__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__2__Impl
	rule__Specific__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getInteractivelyValidKeyword_2()); }
(
	'interactivelyValid' 
)?
{ after(grammarAccess.getSpecificAccess().getInteractivelyValidKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specific__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__3__Impl
	rule__Specific__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getSpecificAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specific__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__4__Impl
	rule__Specific__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getUielementAssignment_4()); }
(rule__Specific__UielementAssignment_4)*
{ after(grammarAccess.getSpecificAccess().getUielementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specific__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specific__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getSpecificAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Domain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getDomainRuleFromKeyword_0()); }

	'domain rule from' 

{ after(grammarAccess.getDomainAccess().getDomainRuleFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getDomainTypeAssignment_1()); }
(rule__Domain__DomainTypeAssignment_1)
{ after(grammarAccess.getDomainAccess().getDomainTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__2__Impl
	rule__Domain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getDomainAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__3__Impl
	rule__Domain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getUielementAssignment_3()); }
(rule__Domain__UielementAssignment_3)
{ after(grammarAccess.getDomainAccess().getUielementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDomainAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Window__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Window__Group__0__Impl
	rule__Window__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getWindowKeyword_0()); }

	'Window' 

{ after(grammarAccess.getWindowAccess().getWindowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Window__Group__1__Impl
	rule__Window__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getLabelAssignment_1()); }
(rule__Window__LabelAssignment_1)?
{ after(grammarAccess.getWindowAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Window__Group__2__Impl
	rule__Window__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getWindowAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Window__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getContainedElementsAssignment_3()); }
(rule__Window__ContainedElementsAssignment_3)
{ after(grammarAccess.getWindowAccess().getContainedElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Panel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Panel__Group__0__Impl
	rule__Panel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getPanelKeyword_0()); }

	'Panel' 

{ after(grammarAccess.getPanelAccess().getPanelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Panel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Panel__Group__1__Impl
	rule__Panel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getLabelAssignment_1()); }
(rule__Panel__LabelAssignment_1)?
{ after(grammarAccess.getPanelAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Panel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Panel__Group__2__Impl
	rule__Panel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getPanelAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Panel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Panel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getContainedElementsAssignment_3()); }
(rule__Panel__ContainedElementsAssignment_3)
{ after(grammarAccess.getPanelAccess().getContainedElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListElementSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListElementSelector__Group__0__Impl
	rule__ListElementSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getListElementSelectorKeyword_0()); }

	'ListElementSelector' 

{ after(grammarAccess.getListElementSelectorAccess().getListElementSelectorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListElementSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListElementSelector__Group__1__Impl
	rule__ListElementSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getLabelAssignment_1()); }
(rule__ListElementSelector__LabelAssignment_1)?
{ after(grammarAccess.getListElementSelectorAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListElementSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListElementSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getGroup_2()); }
(rule__ListElementSelector__Group_2__0)?
{ after(grammarAccess.getListElementSelectorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListElementSelector__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListElementSelector__Group_2__0__Impl
	rule__ListElementSelector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getWithKeyword_2_0()); }

	'with' 

{ after(grammarAccess.getListElementSelectorAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListElementSelector__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListElementSelector__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getContainedElementsAssignment_2_1()); }
(rule__ListElementSelector__ContainedElementsAssignment_2_1)
{ after(grammarAccess.getListElementSelectorAccess().getContainedElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectedConcept__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectedConcept__Group__0__Impl
	rule__SelectedConcept__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedConcept__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectedConceptAccess().getConceptKeyword_0()); }

	'concept' 

{ after(grammarAccess.getSelectedConceptAccess().getConceptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedConcept__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectedConcept__Group__1__Impl
	rule__SelectedConcept__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedConcept__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectedConceptAccess().getNameKeyword_1()); }

	'name' 

{ after(grammarAccess.getSelectedConceptAccess().getNameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedConcept__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectedConcept__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedConcept__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectedConceptAccess().getIdAssignment_2()); }
(rule__SelectedConcept__IdAssignment_2)
{ after(grammarAccess.getSelectedConceptAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Button__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }

	'Button' 

{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getLabelAssignment_1()); }
(rule__Button__LabelAssignment_1)?
{ after(grammarAccess.getButtonAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataField__Group__0__Impl
	rule__DataField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFieldAccess().getDataFieldKeyword_0()); }

	'DataField' 

{ after(grammarAccess.getDataFieldAccess().getDataFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFieldAccess().getLabelAssignment_1()); }
(rule__DataField__LabelAssignment_1)?
{ after(grammarAccess.getDataFieldAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImageField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageField__Group__0__Impl
	rule__ImageField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageFieldAccess().getImageFieldKeyword_0()); }

	'ImageField' 

{ after(grammarAccess.getImageFieldAccess().getImageFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageFieldAccess().getLabelAssignment_1()); }
(rule__ImageField__LabelAssignment_1)?
{ after(grammarAccess.getImageFieldAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__0__Impl
	rule__TextField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }

	'TextField' 

{ after(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getLabelAssignment_1()); }
(rule__TextField__LabelAssignment_1)?
{ after(grammarAccess.getTextFieldAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextArea__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextArea__Group__0__Impl
	rule__TextArea__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextArea__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAreaAccess().getTextAreaKeyword_0()); }

	'TextArea' 

{ after(grammarAccess.getTextAreaAccess().getTextAreaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextArea__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextArea__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextArea__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAreaAccess().getLabelAssignment_1()); }
(rule__TextArea__LabelAssignment_1)?
{ after(grammarAccess.getTextAreaAccess().getLabelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__RulesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_0_0()); }
	ruleRule{ after(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SpecificRulesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSpecificRulesSpecificParserRuleCall_1_0()); }
	ruleSpecific{ after(grammarAccess.getModelAccess().getSpecificRulesSpecificParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DomainRulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDomainRulesDomainParserRuleCall_2_0()); }
	ruleDomain{ after(grammarAccess.getModelAccess().getDomainRulesDomainParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__AuitypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getAuitypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getRuleAccess().getAuitypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__TaskTypeAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTaskTypeAUITypeParserRuleCall_2_0_1_0()); }
	ruleAUIType{ after(grammarAccess.getRuleAccess().getTaskTypeAUITypeParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InteractivelyValidAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getInteractivelyValidValidParserRuleCall_2_1_0()); }
	ruleValid{ after(grammarAccess.getRuleAccess().getInteractivelyValidValidParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__UielementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getUielementUIElementParserRuleCall_4_0()); }
	ruleUIElement{ after(grammarAccess.getRuleAccess().getUielementUIElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__TaskNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getTaskNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSpecificAccess().getTaskNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specific__UielementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificAccess().getUielementUIElementParserRuleCall_4_0()); }
	ruleUIElement{ after(grammarAccess.getSpecificAccess().getUielementUIElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__DomainTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getDomainTypeAttributeTypeParserRuleCall_1_0()); }
	ruleAttributeType{ after(grammarAccess.getDomainAccess().getDomainTypeAttributeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__UielementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getUielementUIElementParserRuleCall_3_0()); }
	ruleUIElement{ after(grammarAccess.getDomainAccess().getUielementUIElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Window__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getWindowAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Window__ContainedElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWindowAccess().getContainedElementsConceptParserRuleCall_3_0()); }
	ruleConcept{ after(grammarAccess.getWindowAccess().getContainedElementsConceptParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getPanelAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Panel__ContainedElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPanelAccess().getContainedElementsConceptParserRuleCall_3_0()); }
	ruleConcept{ after(grammarAccess.getPanelAccess().getContainedElementsConceptParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getListElementSelectorAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListElementSelector__ContainedElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListElementSelectorAccess().getContainedElementsConceptParserRuleCall_2_1_0()); }
	ruleConcept{ after(grammarAccess.getListElementSelectorAccess().getContainedElementsConceptParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__SelectionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConceptAccess().getSelectionSelectedConceptParserRuleCall_2_0()); }
	ruleSelectedConcept{ after(grammarAccess.getConceptAccess().getSelectionSelectedConceptParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedConcept__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectedConceptAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSelectedConceptAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getButtonAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataField__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFieldAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getDataFieldAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImageField__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageFieldAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getImageFieldAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getTextFieldAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextArea__LabelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAreaAccess().getLabelLabelParserRuleCall_1_0()); }
	ruleLabel{ after(grammarAccess.getTextAreaAccess().getLabelLabelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


